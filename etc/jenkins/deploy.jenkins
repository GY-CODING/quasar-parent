pipeline {
    agent any

    environment {
        GITHUB_USERNAME = 'gy-toxyc'
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')
    }

    parameters {
        string(name: 'WORKSPACE', defaultValue: '.', description: 'Project workspace path.')
    }

    stages {
        stage('Install JDK') {
            steps {
                sh '''
                    echo ">>> Downloading JDK 17..."
                    curl -L -o jdk17.tar.gz https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_x64_linux_hotspot_17.0.13_11.tar.gz
                    mkdir -p .jdk
                    tar -xzf jdk17.tar.gz -C .jdk --strip-components=1
                    rm jdk17.tar.gz
                    export JAVA_HOME=$PWD/.jdk
                    export PATH=$JAVA_HOME/bin:$PATH
                    java -version
                '''
            }
        }

        stage('Install Maven') {
            steps {
                sh '''
                    echo ">>> Downloading Maven..."
                    curl -L -o maven.tar.gz https://archive.apache.org/dist/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz
                    mkdir -p .maven
                    tar -xzf maven.tar.gz -C .maven --strip-components=1
                    rm maven.tar.gz
                    export JAVA_HOME=$PWD/.jdk
                    export PATH=$JAVA_HOME/bin:$PWD/.maven/bin:$PATH
                    mvn -v
                '''
            }
        }

        stage('Set up Settings file') {
            steps {
                script {
                    def settingsContent = """
                    <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                          http://maven.apache.org/xsd/settings-1.0.0.xsd">
                      <activeProfiles>
                        <activeProfile>github</activeProfile>
                      </activeProfiles>
                      <profiles>
                        <profile>
                          <id>github</id>
                          <repositories>
                            <repository>
                              <id>central</id>
                              <url>https://repo1.maven.org/maven2</url>
                            </repository>
                            <repository>
                              <id>github</id>
                              <url>https://maven.pkg.github.com/GY-CODING/spring-exceptions</url>
                              <snapshots>
                                <enabled>true</enabled>
                              </snapshots>
                            </repository>
                            <repository>
                              <id>github</id>
                              <url>https://maven.pkg.github.com/GY-CODING/spring-logs</url>
                              <snapshots>
                                <enabled>true</enabled>
                              </snapshots>
                            </repository>
                            <repository>
                              <id>github</id>
                              <url>https://maven.pkg.github.com/GY-CODING/spring-kafka</url>
                              <snapshots>
                                <enabled>true</enabled>
                              </snapshots>
                            </repository>
                          </repositories>
                        </profile>
                      </profiles>
                      <servers>
                        <server>
                          <id>github</id>
                          <username>${env.GITHUB_USERNAME}</username>
                          <password>${env.GITHUB_TOKEN}</password>
                        </server>
                      </servers>
                    </settings>
                    """
                    writeFile file: "${params.WORKSPACE}/settings.xml", text: settingsContent.trim()
                }
            }
        }

        stage('Deploy to GitHub Packages') {
            steps {
                sh "mvn deploy --settings ${params.WORKSPACE}/settings.xml"
            }
        }
    }
}